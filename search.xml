<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/07/hello-world/"/>
      <url>2020/10/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">fristPage</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java网络编程-NIO之缓冲区</title>
      <link href="2019/04/24/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-NIO%E4%B9%8B%E7%BC%93%E5%86%B2%E5%8C%BA/"/>
      <url>2019/04/24/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-NIO%E4%B9%8B%E7%BC%93%E5%86%B2%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<p>NIO的基础要素是缓冲区、通道、选择器。本篇文章讲述缓冲区的部分。</p><!-- toc --><h1 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h1><h2 id="NIO概念"><a href="#NIO概念" class="headerlink" title="NIO概念"></a>NIO概念</h2><p>同步和和非同步、阻塞和非阻塞。</p><p>同步阻塞 一直排队，直到处理到数据为止。</p><p>同步非阻塞 如果处理需要排队，则不进行。</p><p>异步非阻塞 不排队有监听，监听到目标条件则调用回调函数。</p><p>在 Java 7 中，NIO 有了进一步的改进，也就是 NIO 2，引入了异步非阻塞 IO 方式，也有很多人叫它 AIO（Asynchronous IO</p><p>NIO由三部分组成：缓冲区(buffer)、通道(channel)、选择器(Selector) 在访问个数特别大的时候才使用的。</p><h2 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h2><p>作用: 在NIO中，就是通过 Buffer 来读写数据的。所有的数据都是用Buffer来处理的，它是NIO读写数据的中转池, 通常使用字节数组。</p><h3 id="buffer的种类"><a href="#buffer的种类" class="headerlink" title="buffer的种类"></a>buffer的种类</h3><ul><li>ByteBuffer</li><li>CharBuffer</li><li>DoubleBuffer</li><li>FloatBuffer</li><li>IntBuffer</li><li>LongBuffer</li><li>ShortBuffer</li><li>没有Boolean类型的缓冲区</li></ul><h3 id="缓冲区的种类："><a href="#缓冲区的种类：" class="headerlink" title="缓冲区的种类："></a>缓冲区的种类：</h3><ul><li><p>在堆中创建缓冲区称为：间接缓冲区</p></li><li><p>在系统内存创建缓冲区称为：直接缓冲区</p></li><li><p>间接缓冲区的创建和销毁效率要高于直接缓冲区</p></li><li><p>间接缓冲区的工作效率要低于直接缓冲区</p></li></ul><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><ul><li>创建缓冲区<ul><li>static ByteBuffer allocate(int capacity)构造方法 在堆内存中创建一个byte类型的buffer缓冲区，参数为该缓冲区的长度</li><li>static ByteBuffer allocateDirect(int capacity) 构造方法 在系统内存中创建一个byte类型的buffer缓冲区，参数为该缓冲区的长度</li><li>public static ByteBuffer wrap(byte[] array) 通过数组在堆内存创建buffer间接缓冲区</li></ul></li><li>添加数据<ul><li>public ByteBuffer put(byte b)：向当前可用位置添加数据。</li><li>public ByteBuffer put(byte[] byteArray)：向当前可用位置添加一个byte[]数组</li><li>public ByteBuffer put(byte[] byteArray,int offset,int len)：添加一个byte[]数组的一部分到缓冲区的当前可用位置。</li></ul></li><li>容量<ul><li>public final int capacity() : 返回此缓冲区的容量。 </li></ul></li><li>限制<ul><li>public int limit()：获取此缓冲区的限制。</li><li>public Buffer limit(int newLimit)：设置newLimit表示索引为此缓冲区的限制。限制之后只能使用限制索引以前的内容。</li></ul></li><li>位置<ul><li>public int position()：获取当前可写入位置索引。</li><li>public Buffer position(int p)：更改当前可写入位置索引。不能大于limit方法设置的限制索引。设置完之后只有范围是position的位置到limit的位置可用</li></ul></li><li>标记<ul><li>public Buffer mark()：设置此缓冲区的标记为当前的position位置。</li></ul></li><li>操作buffer方法</li><li>public Buffer reset() : 将此缓冲区的position位置重置为以前标记的位置。</li><li>public int remaining()：获取position与limit之间的元素数。</li><li>public boolean isReadOnly()：获取当前缓冲区是否只读。</li><li>public boolean isDirect()：获取当前缓冲区是否为直接缓冲区。</li><li>public Buffer rewind()：重绕此缓冲区。将position位置设置为：0，限制limit不变。丢弃标记。</li><li>public Buffer clear()：还原缓冲区的状态。将position设置为：0将限制limit设置为容量capacity；丢弃标记mark。数据保留。</li><li>public Buffer flip()：缩小limit的范围。将limit设置为当前position位置；将当前position位置设置为0；丢弃mark。数据保留。</li></ul><p>推荐使用字节缓冲区</p><h4 id="创建缓冲区"><a href="#创建缓冲区" class="headerlink" title="创建缓冲区"></a>创建缓冲区</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer byteBuffer = ByteBuffer.allocateDirect(<span class="number">10</span>);</span><br><span class="line">ByteBuffer byteBuffer = byteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">byte</span>[] bytes = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">ByteBuffer byteBuffer = byteBuffer.wrap(bytes);</span><br></pre></td></tr></table></figure><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br></pre></td></tr></table></figure><h4 id="容量（capacity）"><a href="#容量（capacity）" class="headerlink" title="容量（capacity）"></a>容量（capacity）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">System.out.println(b1.limit());<span class="comment">//使用limit方法打印当前缓冲区容量。 结果： 10</span></span><br></pre></td></tr></table></figure><p>Buffer的容量(capacity)是指：Buffer所能够包含的元素的最大数量。定义了Buffer后，容量是不可变的。</p><h4 id="限制（limit）"><a href="#限制（limit）" class="headerlink" title="限制（limit）"></a>限制（limit）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;限制前容量: &quot;</span> + b1.limit());<span class="comment">//10</span></span><br><span class="line">b1.limit(<span class="number">5</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;限制后容量: &quot;</span> + b1.limit());<span class="comment">//5</span></span><br></pre></td></tr></table></figure><p>设置限制后在限制范围外添加数据会报BufferOverflowException异常。</p><h4 id="位置（position）"><a href="#位置（position）" class="headerlink" title="位置（position）"></a>位置（position）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;设置位置前:&quot;</span>+Arrays.toString(b1.array()));</span><br><span class="line">System.out.println(b1.toString());</span><br><span class="line">b1.position(<span class="number">5</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">14</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;设置位置后:&quot;</span>+Arrays.toString(b1.array()));</span><br><span class="line">System.out.println(b1.toString());</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置位置前:[11, 12, 13, 0, 0, 0, 0, 0, 0, 0]</span><br><span class="line">java.nio.HeapByteBuffer[pos=3 lim=10 cap=10]</span><br><span class="line">设置位置后:[11, 12, 13, 0, 0, 14, 0, 0, 0, 0]</span><br><span class="line">java.nio.HeapByteBuffer[pos=6 lim=10 cap=10]</span><br></pre></td></tr></table></figure><p>通俗的理解位置就是下个元素要插入的位置。</p><h4 id="mark（标记）-amp-reset方法"><a href="#mark（标记）-amp-reset方法" class="headerlink" title="mark（标记）&amp;reset方法"></a>mark（标记）&amp;reset方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.mark();</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;重置前：&quot;</span>+Arrays.toString(b1.array()));</span><br><span class="line">b1.reset();</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">14</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;重置后&quot;</span>+Arrays.toString(b1.array()));</span><br></pre></td></tr></table></figure><p>标记只有配合reset方法才有效果，reset方法会把当前position位置修改到Mark的位置上。</p><p>如果没有mark标记，而直接使用reset方法会报InvalidMarkException异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line"><span class="comment">//        b1.mark();</span></span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;重置前：&quot;</span>+Arrays.toString(b1.array()));</span><br><span class="line">b1.reset();</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">14</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;重置后&quot;</span>+Arrays.toString(b1.array()));</span><br></pre></td></tr></table></figure><h4 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h4><h5 id="remaining"><a href="#remaining" class="headerlink" title="remaining()"></a>remaining()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">b1.limit(<span class="number">5</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;获取position与limit之间的元素数&quot;</span>+b1.remaining());<span class="comment">//2</span></span><br></pre></td></tr></table></figure><p>获取position与limit之间的元素数</p><h5 id="isReadOnly"><a href="#isReadOnly" class="headerlink" title="isReadOnly()"></a>isReadOnly()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">System.out.println(b1.isReadOnly());<span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>要获得一个只读缓冲区，需要调用asReadOnlyBuffer方法创建，不过在Buffer中他是一个抽象方法。</p><h5 id="isDirect"><a href="#isDirect" class="headerlink" title="isDirect()"></a>isDirect()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">System.out.println(b1.isDirect());<span class="comment">//flase</span></span><br><span class="line">ByteBuffer byteBuffer = ByteBuffer.allocateDirect(<span class="number">10</span>);</span><br><span class="line">System.out.println(byteBuffer.isDirect());<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h5 id="rewind"><a href="#rewind" class="headerlink" title="rewind()"></a>rewind()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;倒带缓冲区前&quot;</span>+b1.position());</span><br><span class="line">b1.rewind();</span><br><span class="line">System.out.println(<span class="string">&quot;倒带缓冲区后&quot;</span>b1.position());</span><br></pre></td></tr></table></figure><p>将position位置设置为：0，限制limit不变。丢弃标记。</p><h5 id="clear"><a href="#clear" class="headerlink" title="clear()"></a>clear()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">b1.limit(<span class="number">7</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;clear前: &quot;</span>+b1);</span><br><span class="line">System.out.println(Arrays.toString(b1.array()));</span><br><span class="line">b1.clear();</span><br><span class="line">System.out.println(<span class="string">&quot;clear后: &quot;</span>+b1);</span><br><span class="line">System.out.println(Arrays.toString(b1.array()));</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">clear前: java.nio.HeapByteBuffer[pos=3 lim=7 cap=10]</span><br><span class="line">[11, 12, 13, 0, 0, 0, 0, 0, 0, 0]</span><br><span class="line">clear后: java.nio.HeapByteBuffer[pos=0 lim=10 cap=10]</span><br><span class="line">[11, 12, 13, 0, 0, 0, 0, 0, 0, 0]</span><br></pre></td></tr></table></figure><p>还原缓冲区position、limit、mark最初的状态，数据不变。</p><h5 id="flip"><a href="#flip" class="headerlink" title="flip()"></a>flip()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer b1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">12</span>);</span><br><span class="line">b1.put((<span class="keyword">byte</span>) <span class="number">13</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;翻转前：&quot;</span>+b1);</span><br><span class="line">b1.flip();</span><br><span class="line">System.out.println(<span class="string">&quot;翻转后：&quot;</span>+b1);</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">翻转前：java.nio.HeapByteBuffer[pos=3 lim=10 cap=10]</span><br><span class="line">翻转后：java.nio.HeapByteBuffer[pos=0 lim=3 cap=10]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源码分析-equals方法</title>
      <link href="2019/04/24/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-equals/"/>
      <url>2019/04/24/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-equals/</url>
      
        <content type="html"><![CDATA[<p>从对象、object、String分析equals方法。</p><h3 id="equals方法"><a href="#equals方法" class="headerlink" title="equals方法"></a>equals方法</h3><p>在String中，我们用equals来比较两个字符串中的内容是否相等，但是那个是String重写了Object的equals方法，equals方法最原本的作用是比较被比较对象是否和当前对象的地址一致。下面看源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那如果是我们写了一个Bean对象，new了两个对象，两个对象的地址肯定是不一致的，每次new都会在堆内存中划分一块区域给当前对象，new了两次说明划分了两块，那这个时候只对比地址很明显是不合理的，我们要对比两个对象里面的内容是否相等，那就需要重写equals方法从地址、对象类型、属性内容。</p><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="string">&quot;12&quot;</span>,<span class="number">12</span>,<span class="string">&quot;HD&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    Student student1 = <span class="keyword">new</span> Student(<span class="string">&quot;12&quot;</span>,<span class="number">12</span>,<span class="string">&quot;HD&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    System.out.println(student == student1); <span class="comment">//地址不同</span></span><br><span class="line">    System.out.println(student.equals(student1));<span class="comment">//对象的内容相同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">false</span><br><span class="line">true</span><br></pre></td></tr></table></figure><h4 id="Student类的equals方法"><a href="#Student类的equals方法" class="headerlink" title="Student类的equals方法"></a>Student类的equals方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//是否等于本类</span></span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//被比较对象里面有没有地址/本类对象是否和被对比对象类型一致？</span></span><br><span class="line">    Student student = (Student) o;</span><br><span class="line">    <span class="comment">//强转对象为当前对象类型，因为前面判断过是否为同一个类的，所以不会报错</span></span><br><span class="line">    <span class="keyword">return</span> age == student.age &amp;&amp;<span class="comment">//基本类型使用==判断</span></span><br><span class="line">        id == student.id &amp;&amp;<span class="comment">//基本类型使用==判断</span></span><br><span class="line">        Objects.equals(name, student.name) &amp;&amp;</span><br><span class="line">        <span class="comment">//引用类型使用Objects类的equals方法判断</span></span><br><span class="line">        Objects.equals(address, student.address);</span><br><span class="line">   <span class="comment">//引用类型使用Objects类的equals方法判断</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出在对象地址不一致之后，被对比对象会被转换成Student(前面判断过类不会转换异常：getclass方法)，然后对于对象里的基本类型的属性使用==比较，非基本类型的属性使用Objects.equals方法比较。</p><h4 id="Objects源码"><a href="#Objects源码" class="headerlink" title="Objects源码"></a>Objects源码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object a, Object b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a == b) || (a != <span class="keyword">null</span> &amp;&amp; a.equals(b));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法原理说明：</p><p>①判断a对象和b对象的地址是否一样如果一样返回true，如果为false继续判断后面布尔条件。</p><p>②再判断a对象是否不为空，且调用Objects的equals方法。（本案例的Object是String类型，所以会调用String的equals方法）</p><p>接入前面的bean对象说明：String类型的name和被比较对象的name属性比较地址，如果为false，则继续判断a是不是空的同时调用Object的equals方法。</p><h4 id="String源码"><a href="#String源码" class="headerlink" title="String源码"></a>String源码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">char</span> value[];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">String</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = <span class="string">&quot;&quot;</span>.value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            String anotherString = (String)anObject;</span><br><span class="line">            <span class="keyword">int</span> n = value.length;</span><br><span class="line">            <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">                <span class="keyword">char</span> v1[] = value;</span><br><span class="line">                <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>这里有个前提，在equals中有个value属性，这个属性是个final修饰的char类型的数组，会在String对象初始化的时候赋值，把当前String对象的内容放入char数组中。</strong></p><p>方法原理：</p><p>①把被比较对象与当前对象比较地址。</p><p>②判断被比较对象是不是String对象。</p><p>③把被比较对象的长度和当前对象的长度作比较看是否一致，不一致返回false。</p><p>④如果一致把当前字符串放入v1char数组，同时把被比较对象的字符串放入v2数组，逐一比较，其中某一位不一致就返回flase。</p><p>​    </p><p><img src="/img/image-20200907105058583.png"></p><p>拿address属性举例，两个都是hd，String源码阶段会产生像上图的value数组初始化。然后本类的address是’H’,’D’,被比较的Student1.address也是’H’,’D’,逐一对比都是一致的，所以返回true。</p><p>总的来说：</p><p>Student中的equals方法执行流程：Student –&gt; Objects –&gt; String</p><p>基本类型会在Student类中对比较完毕，引用类型则通过调用String的equals方法进行数组内容比较。</p>]]></content>
      
      
      <categories>
          
          <category> 源码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 常用命令</title>
      <link href="2019/03/30/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2019/03/30/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="fd48236fecdc31a7f8900361e3d1d865e07b8e1b3d8a4855910de5c4ec852556"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="2019/03/30/Spring/"/>
      <url>2019/03/30/Spring/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><p>[TOC]</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="IOC-inversion-of-control-控制反转"><a href="#IOC-inversion-of-control-控制反转" class="headerlink" title="IOC inversion of control  控制反转"></a>IOC inversion of control  控制反转</h3><p>将对象创建的任务交给Spring的IOC容器去控制，给我们的项目松耦合。</p><h3 id="DI-dependency-injection-依赖注入"><a href="#DI-dependency-injection-依赖注入" class="headerlink" title="DI dependency injection 依赖注入"></a>DI dependency injection 依赖注入</h3><p>因为我们将对象的创建已经交给IOC容器去做了，那么自然就没有new的过程，那我们就没办法在创建对象的时候写入参数了。 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A a = <span class="keyword">new</span> a(<span class="string">&quot;aaa&quot;</span>);</span><br></pre></td></tr></table></figure><p>这个时候就需要使用DI 给我们的对象注入所需的内容。</p><h3 id="spring-core的5大jar包"><a href="#spring-core的5大jar包" class="headerlink" title="spring core的5大jar包"></a>spring core的5大jar包</h3><ul><li><strong>commons-logging-1.1.3.jar 日志</strong></li><li><strong>spring-beans-3.2.5.RELEASE.jar bean节点</strong></li><li><strong>spring-context-3.2.5.RELEASE.jar spring上下文节点</strong></li><li><strong>spring-core-3.2.5.RELEASE.jar spring核心功能</strong></li><li><strong>spring-expression-3.2.5.RELEASE.jar spring表达式相关表</strong></li></ul><h2 id="名称空间相关"><a href="#名称空间相关" class="headerlink" title="名称空间相关"></a>名称空间相关</h2><p>头文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line">xmlns:p  代表引用P标签，可以在Bean.xml中使用p标签进行快速配置</span><br><span class="line">xmlns:context 代表引用context 可以使用注解</span><br><span class="line">xsi:schemaLocation  </span><br></pre></td></tr></table></figure><table><thead><tr><th>名称空间</th><th>作用</th></tr></thead><tbody><tr><td>xmlns:p</td><td>代表引用P标签，可以在Bean.xml中使用p标签进行快速配置</td></tr><tr><td>xmlns:context</td><td>代表引用context名称空间， 可以使用注解</td></tr><tr><td>xsi:schemaLocation</td><td></td></tr></tbody></table><h2 id="配置文件标签查阅"><a href="#配置文件标签查阅" class="headerlink" title="配置文件标签查阅"></a>配置文件标签查阅</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Bean</span> <span class="attr">id</span>=<span class="string">&quot;bean对象ID，用于给ApplicationContent通过配置文件查找对应对象所用的标识 id之间不可重复&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;类路径 如：cn.snake.xxx 用于给IOC容器通过反射创建该类&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">scope</span>=<span class="string">&quot;对象的作用范围，此处与项目类型有别，</span></span></span><br><span class="line"><span class="tag"><span class="string">           非web应用只有两个参数可写，</span></span></span><br><span class="line"><span class="tag"><span class="string">             singleton：对象创建为单例模式，</span></span></span><br><span class="line"><span class="tag"><span class="string">             prototype：对象创建为多例模式；</span></span></span><br><span class="line"><span class="tag"><span class="string">           而web项目的话会多几个</span></span></span><br><span class="line"><span class="tag"><span class="string">             request:请求</span></span></span><br><span class="line"><span class="tag"><span class="string">             session：会话</span></span></span><br><span class="line"><span class="tag"><span class="string">             global—session：集群会话&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">init-method</span>=<span class="string">&quot;只在为scope为prototype有效，用于对象创建时自动执行该Bean中的某方法&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">destroy-method</span>=<span class="string">&quot;只在为scope为prototype有效，用于对象销毁时自动执行该Bean中的某方法&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">autowire</span>=<span class="string">&quot;自动装配，可选参数有：byNmame(通过名称装配)和byType(通过对象类型装配)&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">factory-method</span>=<span class="string">&quot;工厂类创建对象所用，这里写返回所需对象的方法名&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">factory-bean</span>=<span class="string">&quot;非静态工厂类用，此处写已配置的BeanID&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">index</span>=<span class="string">&quot;下标从0开始，表示要注入构造方法的第几个参数&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">name</span>=<span class="string">&quot;表示方法参数的名称&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">type</span>=<span class="string">&quot;表示要参数的类型，可以注入基本类型&quot;</span></span></span><br><span class="line"><span class="tag">                 </span></span><br><span class="line"><span class="tag">                     <span class="attr">value</span>=<span class="string">&quot;要注入的值或内容&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">ref</span>=<span class="string">&quot;当要注入的内容不是基本类型时，如date、dao对象，应通过ref注入，但前提是需要有该类的Bean标签，假设已有一个date类的标签ID为&#x27;date&#x27;，ref=&quot;</span><span class="attr">date</span>&quot; &quot;&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>  <span class="attr">name</span>=<span class="string">&quot;set方法的名称，如setuserdao,则此处写userdao&quot;</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">ref</span>=<span class="string">&quot;当要注入的内容不是基本类型时，如date、dao对象，应通过ref注入，但前提是需要有该类的Bean标签，假设已有一个date类的标签ID为&#x27;date&#x27;，ref=&quot;</span><span class="attr">date</span>&quot; &quot;&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Bean</span>&gt;</span>       </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--AOP配置部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;切入点表达式名称&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;此处写法与pointcut一致&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--example：</span></span><br><span class="line"><span class="comment">    &lt;aop:pointcut id=&quot;切入点表达式名称&quot; expression=&quot;execution(* com.snake.service.impl.*.*(..)&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;/aop:pointcut&gt;--&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">&quot;aop的名称，一般可以说明是什么通知，如managerAdvice&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;引入切面类&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;切入点表达式名称&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;此处写法与pointcut一致&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;前置通知方法名&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;与后面的pointcut-ref选其一，用于使用切入点表达式来确定那些切入点需要执行这个前置通知&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;引用前面或该aspect中定义的pointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;后置通知方法名&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;与后面的pointcut-ref选其一，用于使用切入点表达式来确定那些切入点需要执行这个后置通知&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;引用前面或该aspect中定义的pointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after-returning</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;异常通知方法名&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;与后面的pointcut-ref选其一，用于使用切入点表达式来确定那些切入点需要执行这个异常通知&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;引用前面或该aspect中定义的pointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after-throwing</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;最终通知方法名&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;与后面的pointcut-ref选其一，用于使用切入点表达式来确定那些切入点需要执行这个最终通知&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;引用前面或该aspect中定义的pointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;环绕通知方法名&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;与后面的pointcut-ref选其一，用于使用切入点表达式来确定那些切入点需要执行这个环绕通知&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;引用前面或该aspect中定义的pointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:around</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;包名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span>                                </span><br><span class="line"><span class="comment">&lt;!--开启注解扫描器，用于xml配置文件与java注解搭配使用spring ioc时使用，只有开启注解扫描器之后，ioc才会去扫描方法中的注解，base-package中写的是所要扫描的包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启切面自动代理--&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注解相关查阅"><a href="#注解相关查阅" class="headerlink" title="注解相关查阅"></a>注解相关查阅</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(&quot;xxx&quot;)</span><span class="comment">//xml开启注解扫描 用注解配置</span></span><br><span class="line"><span class="comment">//example : @ComponentScan(&quot;cn.snake&quot;)n.snake</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//指定把一个对象加入IOC容器 当不指定BeanId时，默认是当前类名且首字母小写。</span></span><br><span class="line">(value=<span class="string">&quot;xxx&quot;</span>)<span class="comment">//用于指定Beanid,默认可不写</span></span><br><span class="line"><span class="meta">@Repository</span> <span class="comment">//作用同@Component； 在持久层使用</span></span><br><span class="line"><span class="meta">@Service</span> <span class="comment">//作用同@Component； 在业务逻辑层使用</span></span><br><span class="line"><span class="meta">@Controller</span> <span class="comment">//作用同@Component； 在控制层使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注入数据</span></span><br><span class="line"><span class="meta">@Autowired</span> <span class="comment">//自动按照类型注入，如果有两个类型匹配的话，就会按照对象成去匹配BeanID，否则就报错。</span></span><br><span class="line"><span class="meta">@qualifier</span> <span class="comment">/*在自动按照类型注入的基础上，指定注入某个类来注入该对象。 且在对象上不能单独使用，必须依赖autowired。</span></span><br><span class="line"><span class="comment">example:</span></span><br><span class="line"><span class="comment">@qualifier（value=&quot;类名&quot;）只有一个参数可不写value。*/</span></span><br><span class="line"><span class="meta">@Resource</span> <span class="comment">/*依赖关系  相当于autowired和qualifier的结合</span></span><br><span class="line"><span class="comment">如果@Resource不指定值，那么就根据类型来找，相同的类型在IOC容器中不能有两个</span></span><br><span class="line"><span class="comment">如果@Resource指定了值，那么就根据名字来找</span></span><br><span class="line"><span class="comment">example:</span></span><br><span class="line"><span class="comment">    @Resource(name = &quot;userDao&quot;)</span></span><br><span class="line"><span class="comment">    private UserDao userDao;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@value</span> <span class="comment">//用于注入基本类型和String类型的数据，不能注入集合类型</span></span><br><span class="line"><span class="comment">//example:@value(value=&quot;&quot;) value参数中可以使用spEL(spring的el表达式)</span></span><br><span class="line"><span class="meta">@scope</span> <span class="comment">//用于表示当前对象的作用范围 可选值：singleton（单例）、 prototype（多例）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Java类配置</span></span><br><span class="line"><span class="meta">@Configuration</span><span class="comment">//表明该类是配置类</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ComponentScan(&quot;xxx&quot;)</span><span class="comment">//xml开启注解扫描 用注解配置</span></span><br><span class="line"><span class="comment">//example : @ComponentScan(&quot;cn.snake&quot;)n.snake</span></span><br><span class="line"><span class="comment">//开启扫描器，扫描snake包下的类</span></span><br><span class="line"><span class="comment">//也可以指定多个基础包</span></span><br><span class="line"><span class="comment">//也可以指定类型</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ContextConfiguration</span><span class="comment">//用于给测试类加载配置类,前提导入spring test包</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span> </span><br><span class="line"><span class="comment">/*用途类似XML中的工厂类模式，用于修饰方法并通过方法的返回值得到对象，并将方法的返回值对象存入Spring ioc容器中，容器中Bean的id默认为方法名，如在使用jar包时，*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Import</span><span class="comment">/*用于导入其他配置类*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span> <span class="comment">//指定一个类为切面类 </span></span><br><span class="line"><span class="meta">@Pointcut(&quot;execution( cn.snake.service.*(..))&quot;)</span> <span class="comment">//指定切入点表达式</span></span><br><span class="line"><span class="meta">@Before(&quot;pointCut_()&quot;)</span> <span class="comment">//前置通知: 目标方法之前执行</span></span><br><span class="line">   或 <span class="meta">@Before(&quot;execution(* aa.*.*(..))&quot;)</span><span class="comment">//单独设置拦截表达式</span></span><br><span class="line"><span class="meta">@After(&quot;pointCut_()&quot;)</span> <span class="comment">//后置通知：目标方法之后执行（始终执行）</span></span><br><span class="line">    或<span class="meta">@After(&quot;execution(* aa.*.*(..))&quot;)</span><span class="comment">//单独设置拦截表达式</span></span><br><span class="line"><span class="meta">@AfterReturning(&quot;pointCut_()&quot;)</span> <span class="comment">//返回后通知： 执行方法结束前执行(异常不执行)</span></span><br><span class="line"><span class="meta">@AfterThrowing(&quot;pointCut_()&quot;)</span> <span class="comment">//异常通知: 出现异常时候执行</span></span><br><span class="line"><span class="meta">@Around(&quot;pointCut_()&quot;)</span> <span class="comment">//环绕通知： 环绕目标方法执行</span></span><br></pre></td></tr></table></figure><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><h3 id="使用ioc容器创建Bean对象的几种方式"><a href="#使用ioc容器创建Bean对象的几种方式" class="headerlink" title="使用ioc容器创建Bean对象的几种方式"></a>使用ioc容器创建Bean对象的几种方式</h3><h4 id="1-非工厂类创建"><a href="#1-非工厂类创建" class="headerlink" title="1.非工厂类创建"></a>1.非工厂类创建</h4><h5 id="1-无参构造"><a href="#1-无参构造" class="headerlink" title="1.无参构造"></a>1.无参构造</h5><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String account;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">User</span><span class="params">()</span></span>&#123;</span><br><span class="line">                </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//get .. set</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.domain.user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-有参构造"><a href="#2-有参构造" class="headerlink" title="2.有参构造"></a>2.有参构造</h5><h6 id="1-基本类型"><a href="#1-基本类型" class="headerlink" title="1.基本类型"></a>1.基本类型</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String account;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//get .. set</span></span><br><span class="line">    <span class="comment">//有参构造函数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String id, String account)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.domain.user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span><span class="comment">&lt;!--第一个参数 id--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span><span class="comment">&lt;!--第二个参数 account--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定位参数可以用三种参数定位 index、name、type,三种之中只有name是最容易定位且最常用的。</p><h6 id="2-有非基本类型"><a href="#2-有非基本类型" class="headerlink" title="2.有非基本类型"></a>2.有非基本类型</h6><p>user.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String account;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//get .. set</span></span><br><span class="line">    <span class="comment">//有参构造函数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String id, String account,Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.Date createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Bean</span> <span class="attr">id</span>=<span class="string">&quot;Date&quot;</span> <span class="attr">class</span>=<span class="string">&quot;java.util.Date&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--因为时间是非基本类型，所以需要使用ioc管理date类型，然后使用ref应用该Bean对象--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.domain.user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span><span class="comment">&lt;!--第一个参数 id--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span><span class="comment">&lt;!--第二个参数 account--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createTime&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;Date&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span><span class="comment">&lt;!--第三个参数 createTime--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-工厂类创建"><a href="#2-工厂类创建" class="headerlink" title="2.工厂类创建"></a>2.工厂类创建</h4><h5 id="1-静态工厂类创建"><a href="#1-静态工厂类创建" class="headerlink" title="1.静态工厂类创建"></a>1.静态工厂类创建</h5><p>工厂类对象是帮助我们获取对象的，案例中返回值是userDao对象，这种情况就好比我们在使用第三方jar包的时候，我们并不知道我们所需要用到的对象是什么，或者在哪里，但是jar包中提供了工厂类方法来帮助我们获取所需要的对象，但是这个对象也需要交给Spring-ioc管理。</p><p>factory.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UserDao <span class="title">getUserDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserDao();</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Bean</span> <span class="attr">id</span>=<span class="string">&quot;UserDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.Factory.Factory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getUserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--调用返回userDao对象的工厂类方法 案例中getUserDao返回UserDao对象给我们调用方法，factory-method参数中写返回我们所需对象的方法--&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-非静态工厂类创建"><a href="#2-非静态工厂类创建" class="headerlink" title="2.非静态工厂类创建"></a>2.非静态工厂类创建</h5><p>非静态的就稍微麻烦一点，在xml配置时需要先把工厂对象让IOC 管理。</p><p>factory.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDao <span class="title">getUserDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserDao();</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">&lt;!--首先创建工厂对象--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;factory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.Factory.Factory&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--指定工厂对象和工厂方法--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;User&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;factory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getUserDao&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--当不知道class的时候可以不写，比如使用第三方库的时候，没不知道该对象所在的class--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="spring创建对象细节"><a href="#spring创建对象细节" class="headerlink" title="spring创建对象细节"></a>spring创建对象细节</h4><p>当设置对象创建设置为单例时，对象会在读取配置文件或者读取配置类时就将对象创建，也就是说单例对象的创建时间比ioc容器创建还要早；如果设置为多例时，对象则在ioc容器创建完成之后，调用时再创建对象。</p><p>现在有个特殊情况，单例对象想要在创建时才创建，多例对象由于不知道你要创建多少个所以不可能在ioc容器创建之前创建；</p><h5 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h5><h6 id="lazy-init属性"><a href="#lazy-init属性" class="headerlink" title="lazy-init属性"></a>lazy-init属性</h6><p>这个属性只对scope为singleton时才有效，该属性默认为false，如果改成true时，单例对象则在被调用时才创建。</p><h5 id="多例模式"><a href="#多例模式" class="headerlink" title="多例模式"></a>多例模式</h5><h6 id="init-method-属性和-destory-method属性"><a href="#init-method-属性和-destory-method属性" class="headerlink" title="init-method 属性和 destory-method属性"></a>init-method 属性和 destory-method属性</h6><p>如果我们想要<strong>对象在创建后，执行当前Bean中的某个方法</strong>，我们指定为init-method属性就行了。</p><p>如果我们想要<strong>IOC容器销毁后，执行当前Bean中的某个方法</strong>，我们指定destroy-method属性就行了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;User&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span> <span class="attr">lazy-init</span>=<span class="string">&quot;true&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">destroy-method</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="task：使用Java方式和xml方式各配置一次单例与多例的尝试"><a href="#task：使用Java方式和xml方式各配置一次单例与多例的尝试" class="headerlink" title="task：使用Java方式和xml方式各配置一次单例与多例的尝试"></a>task：使用Java方式和xml方式各配置一次单例与多例的尝试</h6><h2 id="IOC注解方式"><a href="#IOC注解方式" class="headerlink" title="IOC注解方式"></a>IOC注解方式</h2><p>通过注解来配置ioc 有两种方式，一种是xml+Java配置，一种是纯Java配置。</p><p>注解使用前配置步骤：</p><p><img src="https://gitee.com/willardteriberka/pic-bad/raw/master/imgs/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6.png" alt="未命名文件"></p><h4 id="XML-Java"><a href="#XML-Java" class="headerlink" title="XML+Java"></a>XML+Java</h4><p>开启注解扫描器之后，通过给类或方法头写上需要的注解，即可使用。</p><h4 id="纯Java"><a href="#纯Java" class="headerlink" title="纯Java"></a>纯Java</h4><p>创建一个Java类为配置类，并且在该类上使用@configuration注解注上，然后在该类上使用@componentScan打开注解扫描器，并且确定注解扫描范围。</p><p>而后的则是根据需要注释上@service @repository @Resources，使用第三方类时使用@Bean返回第三方类的对象。</p><p><strong>实践后补充代码</strong></p><h4 id="装配第三方库组件"><a href="#装配第三方库组件" class="headerlink" title="装配第三方库组件"></a>装配第三方库组件</h4><p>由于Spring的自动装配并不能将第三方库组件装配到应用中，于是需要显式装配配置**。显示装配有两种方式，通过纯Java的方式第二种是通过xml配置文件的方式。</p><h5 id="通过XML装配bean"><a href="#通过XML装配bean" class="headerlink" title="通过XML装配bean"></a>通过XML装配bean</h5><p>例如装配数据库连接池 druid</p><h5 id="通过java代码装配bean"><a href="#通过java代码装配bean" class="headerlink" title="通过java代码装配bean"></a>通过java代码装配bean</h5><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h2 id="DI"><a href="#DI" class="headerlink" title="DI"></a>DI</h2><p>数据的注入只能通过set方法或构造函数注入</p><h3 id="基本类型数据的注入"><a href="#基本类型数据的注入" class="headerlink" title="基本类型数据的注入"></a>基本类型数据的注入</h3><p>以注入String为例</p><p>service.java </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">service</span><span class="params">(String content)</span> </span>&#123; <span class="comment">//通过构造函数注入</span></span><br><span class="line">    System.out.println(<span class="string">&quot;content is &quot;</span>+ content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注入的参数名为content 值是Hello--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种注入方式一般用于固定的值。</p><p>注解方式</p><p>@value 用于注入基本类型的数据和string类型的数据</p><h3 id="复杂类型注入"><a href="#复杂类型注入" class="headerlink" title="复杂类型注入"></a>复杂类型注入</h3><p>复杂类型分两种情况，从数据上array、list、set为一类，他们都是列表型的。map和property为一类，他们都是键值对类型的。在同类中标签可以互用。</p><h4 id="列表型"><a href="#列表型" class="headerlink" title="列表型"></a>列表型</h4><h5 id="通过set方法注入"><a href="#通过set方法注入" class="headerlink" title="通过set方法注入"></a>通过set方法注入</h5><p>service.Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">service</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(List&lt;String&gt; list)</span></span>&#123; <span class="comment">//通过set方法注入</span></span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;  <span class="comment">//展示数据</span></span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span>//查找set方法</span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此处property标签中的name填写类中set方法后的成员名。</p><h5 id="通过构造器注入"><a href="#通过构造器注入" class="headerlink" title="通过构造器注入"></a>通过构造器注入</h5><p>service.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">service</span></span>&#123;</span><br><span class="line">    List&lt;String&gt; list;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">service</span><span class="params">(List&lt;String&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>bb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="键值对型"><a href="#键值对型" class="headerlink" title="键值对型"></a>键值对型</h4><p>在列表型中已经分别展示了复杂类型通过set和构造器，键值对不区分展示了。只展示set注入复杂类型。</p><p>service.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">service</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map&lt;String, String&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.map = map;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;<span class="comment">//复杂类型展示用方法</span></span><br><span class="line"><span class="comment">//        System.out.println(list);</span></span><br><span class="line">        System.out.println(map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;No1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;No2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注释部分为互用写法。</p><h5 id="互用"><a href="#互用" class="headerlink" title="互用"></a>互用</h5><p>上面说的互用是什么意思呢？拿set注入的方式来说，当我把Bean.xml的文件改成这样的时候，也是可以正常运的。</p><p>列表型:</p><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在property的标签中表面，我们要注入的是list，但是我们使用的是set标签，因为他们都是同样的结构，所以spring支持互用。</p><p>键值对型</p><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;No3&quot;</span>&gt;</span>333<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;No4&quot;</span>&gt;</span>444<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该代码展示props与map标签的互用。</p><h3 id="Bean对象注入"><a href="#Bean对象注入" class="headerlink" title="Bean对象注入"></a>Bean对象注入</h3><p>Bean对象注入的方式只有两种，一种是通过构造函数注入，一种是通过set方法注入。通过set注入容易忘记执行，但通过构造函数注入不是我们常用的创建对象习惯，二者各有利弊。</p><h4 id="通过构造函数注入"><a href="#通过构造函数注入" class="headerlink" title="通过构造函数注入"></a>通过构造函数注入</h4><p>被创建对象必须要有参构造器才能实现DI的通过构造参数对象注入。</p><p>service.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(userdao userdao)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userdao = userdao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--创建userdao对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.dao.userdao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--创建userservice对象--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userservice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.userservice&quot;</span> &gt;</span></span><br><span class="line">       <span class="comment">&lt;!--通过构造器植入所用的标签是constructor-arg--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userdao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="通过set方法注入-1"><a href="#通过set方法注入-1" class="headerlink" title="通过set方法注入"></a>通过set方法注入</h4><p>通过set方法必须要有set方法，并且set方法的对象是被注入的对象。</p><p>service.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserdao</span><span class="params">(userdao userdao)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userdao = userdao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是xml的配置了     <em>划重点：<property>标签</em></p><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--创建userdao对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.dao.userdao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--创建userservice对象--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userservice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.userservice&quot;</span> &gt;</span></span><br><span class="line">       <span class="comment">&lt;!--此时注意，通过set方法所用的标签是property--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userdao&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>name属性有语法提示，提示的内容为类中set方法后的名称，如果方法名为setName</p><p>Bean对象的两种注入方式做个小结：通过set方式注入使用的是<property>标签，而构造器注入则是使用<constructor-arg>标签，在xml中Bean标签内同级。</p><h3 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h3><p>有了自动装配，我们就没有只能使用set方法注入，构造器注入的困扰了，spring自动通过ioc容器查找，找到有唯一的类型时，就自动注入了。</p><h4 id="XML配置文件方式"><a href="#XML配置文件方式" class="headerlink" title="XML配置文件方式"></a>XML配置文件方式</h4><p>自动装配在bean标签中有个属性名叫autowire，自动装配属性有多个值可用：</p><p>byName：通过userservice对象中找是否对象需要被注入，如果有则通过这个对象的名称来XML的配置文件中找有没有这个Bean对象，如果用则将这个对象注入进去。这里注入有个特点，会获取这个对象的名称把首字母改成小写。</p><p>byType：如果使用了根据类型来自动装配，那么在IOC容器中只能有一个这样的类型，否则就会报错！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--创建userdao对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.dao.userdao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--创建userservice对象--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--autowireBean标签中自动装配的属性--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userservice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.userservice&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="注解方式"><a href="#注解方式" class="headerlink" title="注解方式"></a>注解方式</h4><p>@Autowired 注解方式的自动装配。</p><p>该注解可以写在要注入的变量上或者是方法(构造器方法、set方法)上。</p><p>auto有自己的执行流程，当要注入的对象类型中有唯一一个时，就会自动注入了；如果在ioc中发现有多个类型与当前变量类型相同（等价于xml中的bytype），则按照对象名注入（等价于xml中的byname）。</p><p>![autowired执行过程](C:\Users\ZAG WELL\Desktop\autowired执行过程.png)</p><p>@qualifier</p><p>用于解决使用autowired时，ioc容器中存在两个与当前注入变量类型相同，但是又不想改变量名的情况(某个类中 变量都要改的时候)；在注解对象是需要配合autowired注解使用，而在注解方法时，可以单独使用。</p><p>用法：@qualifier(“userdao1”)</p><p>service.Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">service</span> <span class="keyword">implements</span> <span class="title">userdao_i</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;userdao_e&quot;)</span>  <span class="comment">//指定注入userdao_e类</span></span><br><span class="line">    <span class="keyword">private</span> userdao_i userdao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userdao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>userdao_c.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.snake.dao.userdao_i;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userdao_c</span> <span class="keyword">implements</span> <span class="title">userdao_i</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;保存了用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>userdao_e.java </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.snake.dao.userdao_i;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userdao_e</span> <span class="keyword">implements</span> <span class="title">userdao_i</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;User saved&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在service.Java中通过@qualifier指定了当有两个同类型的对象时，指定注入返回英文信息的userdao。</p><p>也可以指定beanid之后指定beanid</p><p>userdao_e.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;English&quot;)</span><span class="comment">//指定了beanid 用于给qualifier指定注入对象用</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userdao_e</span> <span class="keyword">implements</span> <span class="title">userdao_i</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;User saved&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.snake.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">service</span> <span class="keyword">implements</span> <span class="title">userdao_i</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;English&quot;)</span> <span class="comment">// 注入了指定的beanid</span></span><br><span class="line">    <span class="keyword">private</span> userdao_i userdao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userdao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@resource<br>@autowired 和@ qualifier的结合</p><p>用法：@resource(name=”userdao1”)，用法和qualifier一样</p><h3 id="初始化方法与销毁方法的执行"><a href="#初始化方法与销毁方法的执行" class="headerlink" title="初始化方法与销毁方法的执行"></a>初始化方法与销毁方法的执行</h3><p>@proConstruct //用于指定创建后执行的方法</p><p>用法:写在初始化方法上方</p><p>@predestroy //用于指定销毁方法 </p><p>用法：写在销毁方法上方</p><p>对于销毁方法如果使用的是ApplicationContext的子类才可用调用销毁方法，因为ApplicationContext是没有销毁方法的。</p><p>小结：Autowired、qualifier、resource 都不可以注入基本类型和string，只能注入其他bean类型，如果要注入基本类型和string类型则使用value注解。而集合类型只能通过xml配置文件注入。</p><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><h3 id="预先知识"><a href="#预先知识" class="headerlink" title="预先知识"></a>预先知识</h3><p>AOP的原理其实就是代理设计模式，分动态代理和静态代理。静态代理由于需要太多的代理类所以使用动态代理，动态代理也有一个条件就是，被代理对象一定要有接口，但是很多时候并不是所有类都由我们编写，所有类都有接口实现，所以出现了cglib。</p><h4 id="cglib"><a href="#cglib" class="headerlink" title="cglib"></a>cglib</h4><p>一个可以对没有实现接口的类实现动态代理，可以在运行期拓展Java类和实现Java接口，而我们的重点spring AOP也内置了它。导入Spring-core-3.x.x.jar;</p><p>有一点需要注意的是，cglib所要代理的类不能为final或static所修饰的类。final是不可修改的，也就没办法实现我们的增强。static是创建即会执行，运行不受我们控制。</p><h4 id="使用cglib步骤"><a href="#使用cglib步骤" class="headerlink" title="使用cglib步骤"></a>使用cglib步骤</h4><p>创建一个代理类 实现cglib 的MethodInterceptor接口。</p><p>为 Enhancer 对象设置父类；</p><p>实现intercept方法，写出使用动态代理增强原方法的动作。</p><h3 id="专有名词："><a href="#专有名词：" class="headerlink" title="专有名词："></a>专有名词：</h3><p>通知（advice）：拦截到切入点后，所要执行的事。</p><p>​    通知分为5种：</p><p>​        前置通知：在切入点方法前执行的方法就叫前置通知,</p><p>​        后置通知：在切入点方法后执行的方法就叫后置通知,</p><p>​        返回通知：在切入点方法正常执行后执行的通知就叫返回通知，</p><p>​        异常通知：当切入点方法抛出异常后调用的方法就叫异常通知。</p><p>​        环绕通知：完全自己实现切面过程的就是环绕通知。</p><p>连接点（joinpoint）：被代理类中的所有方法；</p><p>切入点（pointcut）：属于连接点，但只包括被切面切入的方法。所有的切入点都是连接点，但不是所有的连接点都是切入点。</p><p>切面（aspect）：切面是通知和切点的结合。通知和切点共同定义了切面的全部内容–他是生命在核实和何处完成其功能；切面类也就是关注点代码，我们通常使用一个类来将这些关注点代码封装起来。</p><p>引入（introduction）：允许我们向现有类添加新方法或属性。</p><p>织入（weaving）：织入是指把切面应用到目标对象并创建新的代理对象的过程。</p><p>​    织入生命周期：</p><p>​        编译期：</p><p>​        类加载期：</p><p>​        运行期：</p><p>视频出现的概念</p><p>target(目标对象)：被代理对象。</p><p>proxy（代理）：一个类被aop织入增强后，产生了一个结果代理类。也就是增强后的代理对象，通过调用改对象的方法来实现通知的执行。</p><h3 id="切入点表达式的书写方法"><a href="#切入点表达式的书写方法" class="headerlink" title="切入点表达式的书写方法"></a>切入点表达式的书写方法</h3><p>全通配方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* *..*.*(..)</span><br></pre></td></tr></table></figure><p>第一个“*” 表示方法修饰符 在表达式中方法的修饰符可以省略 省略后表示所有修饰符</p><p>第二个“*” 表示方法返回值</p><p>第三个“ * ”表示包名， 而“ ..* ” 表示全通配包名 如果不想使用全通配的方法也可以使用   * <em>.</em> <em>的方式表示 如有一个类： cn.snake.util.log 使用表达式的方式书写就是   * *.</em> * <em>.</em> * <em>.</em> log.xxx</p><p>第四个“*”表示方法统配方法名</p><p>(..)表示统配参数 如果要匹配是基本类型，如int参数类型 则写成：(int) 即可，如果是复杂类型则写出该对象所在的类，如 (java.lang.String)</p><p>实际开发常用表达式：一般是切入到业务层的实现类方法下</p><p>切到业务层实现类下的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* cn.snake.service.impl.*.*()</span><br></pre></td></tr></table></figure><p>在注解中使用pointcut的时候需要注解在一个空方法之上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(* cn.snake.service.impl.service.*(..))&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">servicePointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当其他注解使用该表达式时如下表达</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before(&quot;servicePointCut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">berforeExe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;占用线程&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打开自动代理"><a href="#打开自动代理" class="headerlink" title="打开自动代理"></a>打开自动代理</h3><p>当业务层方法没有接口时，会报错BeanNotOfRequiredTypeException ，切面异常</p><p>这时候需要用到自动代理，此时会使用到CGLIB的库。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">proxy-target-class</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="环绕通知"><a href="#环绕通知" class="headerlink" title="环绕通知"></a>环绕通知</h3><p>Proxy中的invoke方法与环绕通知相似，自己决定哪个方法是前置后置通知。</p><p>使用环绕通知需要使用一个spring提供的接口， proceedingJoinPoint </p><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.util.manager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;servcicePointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* cn.snake.service.impl.service.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;manager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servcicePointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:around</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>manager.java </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">    Object proceed = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;占用线程--around&quot;</span>);</span><br><span class="line">        proceed = proceedingJoinPoint.proceed(proceedingJoinPoint.getArgs());</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行成功--around&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行异常，开始回滚--around&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;释放资源--around&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> proceed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在proceed方法执行之前调用的就被视为前置方法，在proceed方法执行之后调用的就被视为后置方法，在整个环绕通知的catch中执行的就是异常通知，在整个环绕通知的finally中执行的就是最终通知。</p><h2 id="AOP的实现方式"><a href="#AOP的实现方式" class="headerlink" title="AOP的实现方式"></a>AOP的实现方式</h2><h3 id="纯XML"><a href="#纯XML" class="headerlink" title="纯XML"></a>纯XML</h3><ul><li><p>导入对应约束</p></li><li><p>将切面与service层对象交由springioc管理</p></li><li><p>使用&lt; aop:aspect &gt; 标签及其子标签完成对应需求开启aop</p></li></ul><p>  manager.java </p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">manager</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">berforeExe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;占用线程&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  service.java</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">service</span> <span class="keyword">implements</span> <span class="title">service_i</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始保存&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  Bean.xml</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.impl.service&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.util.manager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;aop:aspectj-autoproxy proxy-target-class=&quot;true&quot;&gt;&lt;/aop:aspectj-autoproxy&gt;--&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;manager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;berforeExe&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;execution(* cn.snake.service.impl.service.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="简写pointcut"><a href="#简写pointcut" class="headerlink" title="简写pointcut"></a>简写pointcut</h4><p>  当切面方法很多的时候，我们需要写很多个重复的pointcut，这时候就使用&lt; aop:pointcut &gt;标签来提高效率。</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;servcicePointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* cn.snake.service.impl.service.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  书写pointcut标签的有两个地方：</p><ul><li>aop:aspect内：该pointcut只能用于当前切面。</li><li>aop:config内，aop:aspect外：该pointcut可以用于多个切面，但是必须写在调用该表达式的切面之前。</li></ul><p>  Bean.xml</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;servcicePointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* cn.snake.service.impl.service.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;manager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;berforeExe&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servcicePointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;after_returning&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servcicePointCut&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:after-returning</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;after_throwing&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servcicePointCut&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:after-throwing</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servcicePointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML-Java-1"><a href="#XML-Java-1" class="headerlink" title="XML+Java"></a>XML+Java</h3><ul><li>开启注解扫描器</li><li>开启aop注解扫描器</li><li>为service层以及切面类进行注解 ,service层：@Service，切面类： @Component @Aspect</li><li>为切入点方法布置通知注解 @Before @After-Returning@After-throwing@After@Around</li></ul><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.snake&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br></pre></td></tr></table></figure><p>manager.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(* cn.snake.service.impl.service.*(..))&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">servicePointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;servicePointCut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">berforeExe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;占用线程&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@AfterReturning(&quot;servicePointCut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after_returning</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;方法执行成功&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@AfterThrowing(&quot;servicePointCut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after_throwing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;方法执行异常，开始回滚&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@After(&quot;servicePointCut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;释放资源&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Around(&quot;servicePointCut()&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">    Object proceed = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;占用线程--around&quot;</span>);</span><br><span class="line">        proceed = proceedingJoinPoint.proceed(proceedingJoinPoint.getArgs());</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行成功--around&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行异常，开始回滚--around&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;释放资源--around&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> proceed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AOP注解使用细节：当使用注解AOP时，spring有个执行顺序的问题，一般来说一个程序正常执行时，应该是前置通知–&gt;被切面方法–&gt;后置通知–&gt;最终通知。而使用注解时，最终通知与后置通知的执行顺序被对调了。但是我们可以使用环绕通知解决。</p><h3 id="纯Java-1"><a href="#纯Java-1" class="headerlink" title="纯Java"></a>纯Java</h3><ul><li>创建一个javaconfig类<ul><li>并使用@Configuration注解表明该类是J配置类</li><li>然后使用@ComponentScan()确认注解范围</li><li>使用 @EnableAspectJAutoProxy注解开启自动代理</li></ul></li><li>为service层以及切面类进行注解 ,service层：@Service，切面类： @Component @Aspect</li><li>为切入点方法布置通知注解 @Before @After-Returning@After-throwing@After@Around</li></ul><h3 id="AOP相关注解"><a href="#AOP相关注解" class="headerlink" title="AOP相关注解"></a>AOP相关注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span> <span class="comment">//指定一个类为切面类 </span></span><br><span class="line"><span class="meta">@Pointcut(&quot;execution( cn.itcast.e_aop_anno..*(..))&quot;)</span> <span class="comment">//指定切入点表达式</span></span><br><span class="line"><span class="meta">@Before(&quot;pointCut_()&quot;)</span> <span class="comment">//前置通知: 目标方法之前执行</span></span><br><span class="line">   或 <span class="meta">@Before(&quot;execution(* aa.*.*(..))&quot;)</span><span class="comment">//单独设置拦截表达式</span></span><br><span class="line"><span class="meta">@After(&quot;pointCut_()&quot;)</span> <span class="comment">//后置通知：目标方法之后执行（始终执行）</span></span><br><span class="line">    或<span class="meta">@After(&quot;execution(* aa.*.*(..))&quot;)</span><span class="comment">//单独设置拦截表达式</span></span><br><span class="line"><span class="meta">@AfterReturning(&quot;pointCut_()&quot;)</span> <span class="comment">//返回后通知： 执行方法结束前执行(异常不执行)</span></span><br><span class="line"><span class="meta">@AfterThrowing(&quot;pointCut_()&quot;)</span> <span class="comment">//异常通知: 出现异常时候执行</span></span><br><span class="line"><span class="meta">@Around(&quot;pointCut_()&quot;)</span> <span class="comment">//环绕通知： 环绕目标方法执行</span></span><br></pre></td></tr></table></figure><h2 id="JdbcTemplate的使用"><a href="#JdbcTemplate的使用" class="headerlink" title="JdbcTemplate的使用"></a>JdbcTemplate的使用</h2><p>设置数据源方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DriverManagerDataSource driverManagerDataSource = <span class="keyword">new</span> DriverManagerDataSource();</span><br><span class="line">driverManagerDataSource.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">driverManagerDataSource.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/xxx&quot;</span>);</span><br><span class="line">driverManagerDataSource.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">driverManagerDataSource.setPassword(<span class="string">&quot;root&quot;</span>);</span><br></pre></td></tr></table></figure><p>创建jdbcTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(DriverManagerDataSource);</span><br></pre></td></tr></table></figure><p>把通过设置过数据源的DriverManagerDataSource放到jdbcTemplate中，创建JdbcTemplate对象，用于执行SQL语句。</p><p>执行SQL语句</p><p>不返回对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcTemplate.update(<span class="string">&quot;update user set money = ? where id = ?&quot;</span>, user.getmoney(), user.getId());</span><br></pre></td></tr></table></figure><p>update方法，可以用于执行后没有返回值的语句，如增删改方法。</p><p>返回对象</p><p>返回对象较多情况下分两种，一种是List对象，一种是实体类对象(domain)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回List对象</span></span><br><span class="line">List&lt;user&gt; query = jdbcTemplate.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;user&gt;(user.class));</span><br><span class="line"><span class="comment">//返回实体类对象</span></span><br><span class="line">user user = jdbcTemplate.queryForObject(<span class="string">&quot;select * from user where id = ?&quot;</span>, <span class="keyword">new</span> eanPropertyRowMapper&lt;user&gt;(user.class), id);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>两种返回对象的方法都需要自己定义泛型。</p><p>springsupport 待写</p><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>数据库的事务用于保证asid法则，Atomicity（原子性）、isolation（隔离性)、duration（），事务提交时，数据库同时提交，某个语句异常时，全部取消提交。用于保证数据的一致性。</p><h3 id="spring对于事务的管理"><a href="#spring对于事务的管理" class="headerlink" title="spring对于事务的管理"></a>spring对于事务的管理</h3><p>spring的事务管理器，用于把事务上所有的请求都绑定在一起。形成一个单元，PlatformTransactionManager接口是spring事务管理器的接口，DataSourceTransactionManager数据源事务管理，是PlatformTransactionManager接口的实现类之一。</p><h3 id="DataSourceTransactionManager的使用"><a href="#DataSourceTransactionManager的使用" class="headerlink" title="DataSourceTransactionManager的使用"></a>DataSourceTransactionManager的使用</h3><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;DriverManagerDataSource&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db_snake&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbctemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;DriverManagerDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.dao.userdao&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdbctemplate&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userservice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.snake.service.userService&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userdao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userdao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;Transactionmanager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置数据源给事务管理器当事务可以提交时提交--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;DriverManagerDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理详细配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;interceptor&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置管理器所拦截的方法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--name属性中可以使用‘*’作为通配符。优先级则是部分通配的高于全通配的</span></span><br><span class="line"><span class="comment">&quot;find*&quot;部分通配</span></span><br><span class="line"><span class="comment">&quot;*&quot;全通配</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> <span class="attr">isolation</span>=<span class="string">&quot;DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--spring的事务管理基于aop--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;servicePointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* cn.snake.service.*.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;interceptor&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;servicePointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>tx:advice标签的内部事务属性</p><p>isolation:用于指定事务的隔离级别，默认值是 DEFAULT，表示使用数据库的隔离级别。</p><p>propagation:用于指定事务的传播行为，默认值是REQUIRED,一定存在事务，增删改的选择;</p><p>查询方法选SUPPORTS。</p><p>read-only:用于指定事务是否只读，只能用于查询方法才能配置true属性。默认值false。</p><p>timeout:用于指定事务的超时时间，默认-1，表示永不超时。如果指定数值以秒为单位。</p><p>no-rollback-for:用于指定一个异常，当产生异常时，事务不回滚，产生其他异常时，事务回滚，没有默认值，表示任何异常都回滚。</p><p>rollback-for:用于指定一个异常，当产生异常时，事务回滚，产生其他异常时，事务不回滚，没有默认值，表示任何异常都回滚。                     </p><p>XML+Java</p><ul><li>在Bean.xml中配置事务管理器</li><li>开启事务注解扫描</li><li>在需要事务控制的类或方法上配置@Transactional，需要配置事务属性的则在注解后的括号中配置。否则一切按默认配置。</li></ul><p>开启事务注解的扫描</p><p>Bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">&lt;!-- 配置数据源--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db_snake&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 配置事务管理器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开启spring对注解事务的支持--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><p>userService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional(propagation= Propagation.SUPPORTS,readOnly=true)</span><span class="comment">//只读型事务的配置，如果内部有其他方法不使用该配置的话，则另外在方法中另行配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userService</span> <span class="keyword">implements</span> <span class="title">userService_i</span></span>&#123;</span><br><span class="line">    <span class="comment">//需要的是读写型事务配置</span></span><br><span class="line">    <span class="meta">@Transactional(propagation= Propagation.REQUIRED,readOnly=false)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(user org, user get, <span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> org_newMoney = org.getmoney() - money;</span><br><span class="line">        <span class="keyword">double</span> get_newMoney = get.getmoney() + money;</span><br><span class="line">        org.setmoney(org_newMoney);</span><br><span class="line">        get.setmoney(get_newMoney);</span><br><span class="line"><span class="comment">//        int i = 1/0;</span></span><br><span class="line">        userdao.update(org);</span><br><span class="line">        userdao.update(get);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>纯Java</p><ul><li>创建一个配置类用于创建jdbctemplate、配置数据源（数据源读取properties文件内容的话要使用@PropertiesSource()注解,括号内填写properties文件名带后缀）</li><li>使用@EnableTransactionManager开启事务管理器</li></ul><p>配置事务管理器的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">isolation</span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.DEFAULT)</span></span><br><span class="line">    <span class="meta">@Transactional(isolation = Isolation.READ_COMMITTED)</span></span><br><span class="line">    <span class="meta">@Transactional(isolation = Isolation.READ_UNCOMMITTED)</span></span><br><span class="line">    <span class="meta">@Transactional(isolation = Isolation.REPEATABLE_READ)</span></span><br><span class="line">    <span class="meta">@Transactional(isolation = Isolation.SERIALIZABLE)</span></span><br><span class="line">propagation</span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.SUPPORTS)</span></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.REQUIRED)</span></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.MANDATORY)</span></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.NESTED)</span></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.NEVER)</span></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.NOT_SUPPORTED)</span></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.REQUIRES_NEW)</span></span><br><span class="line">readOnly</span><br><span class="line">    <span class="meta">@Transactional(readOnly = false)</span></span><br><span class="line">    <span class="meta">@Transactional(readOnly = true)</span></span><br><span class="line">rollbackFor</span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = xxx.class)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面只是展示在注解中如何制定事务管理器的参数赋值，每个属性中可以用逗号来分开。如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional(isolation = Isolation.DEFAULT,propagation = Propagation.REQUIRED,readOnly = false)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试汇总最终版</title>
      <link href="2019/03/29/%E9%9D%A2%E8%AF%95%E6%B1%87%E6%80%BB%E6%9C%80%E7%BB%88%E7%89%88/"/>
      <url>2019/03/29/%E9%9D%A2%E8%AF%95%E6%B1%87%E6%80%BB%E6%9C%80%E7%BB%88%E7%89%88/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="76d4993c3c1b29904cf60550247b6000460ac3a55cb05f25f80e9771a578150a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
